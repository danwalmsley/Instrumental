<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:InstrumentScope.ViewModels"
        xmlns:controls="clr-namespace:InstrumentScope.Controls"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="InstrumentScope.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="InstrumentScope">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel/>
    </Design.DataContext>

   <Grid RowDefinitions="Auto,Auto,*" RowSpacing="6">
        <StackPanel Orientation="Horizontal" Margin="12" Spacing="8">
            <Button Content="Start Capture"
                    Command="{Binding StartCaptureCommand}"
                    MinWidth="110"/>
            <Button Content="Stop Capture"
                    Command="{Binding StopCaptureCommand}"
                    MinWidth="110"/>
            <Separator Margin="4,0" Width="1" Background="#40FFFFFF"/>
            <Button Content="Clear"
                    Command="{Binding ClearCommand}"
                    MinWidth="80"/>
            <Separator Margin="4,0" Width="1" Background="#40FFFFFF"/>
            <Button Content="Zoom In"
                    Command="{Binding ZoomInCommand}"
                    MinWidth="80"/>
            <Button Content="Zoom Out"
                    Command="{Binding ZoomOutCommand}"
                    MinWidth="80"/>
            <Button Content="Reset Zoom"
                    Command="{Binding ResetZoomCommand}"
                    MinWidth="100"/>
            <Button Content="Go Live"
                    Command="{Binding GoLiveCommand}"
                    MinWidth="90"/>
            <Separator Margin="4,0" Width="1" Background="#40FFFFFF"/>
            <Button Content="Run Demo"
                    Command="{Binding RunDemoCommand}"
                    MinWidth="100"/>
        </StackPanel>

        <!-- Trigger controls -->
        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="12,0,12,0" Spacing="8" VerticalAlignment="Center">
            <CheckBox Content="Trigger" IsChecked="{Binding Timeline.TriggerEnabled}"/>
            <TextBlock Text="Track:" VerticalAlignment="Center"/>
            <ComboBox Width="140"
                      ItemsSource="{Binding Timeline.AvailableTrackNames}"
                      SelectedItem="{Binding Timeline.TriggerTrackName}"/>
            <TextBlock Text="Event:" VerticalAlignment="Center"/>
            <ComboBox Width="160"
                      ItemsSource="{Binding Timeline.AvailableEventLabels}"
                      SelectedItem="{Binding Timeline.TriggerEventLabel}"/>
            <TextBlock Text="Edge:" VerticalAlignment="Center"/>
            <ComboBox Width="110"
                      ItemsSource="{Binding Timeline.TriggerModes}"
                      SelectedItem="{Binding Timeline.TriggerMode}"/>
            <TextBlock Text="Measure:" VerticalAlignment="Center"/>
            <TextBox Width="110"
                     Watermark="e.g. -100 µs"
                     ToolTip.Tip="Horizontal offset from center. Units: ns, µs/us, ms, s (sign allowed)"
                     Text="{Binding TriggerMeasurePositionText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <TextBlock Text="Holdoff:" VerticalAlignment="Center"/>
            <TextBox Width="110"
                     Watermark="e.g. 100 µs"
                     ToolTip.Tip="0 to 1 s. Units: ns, µs/us, ms, s"
                     Text="{Binding TriggerHoldoffText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <TextBlock Text="Last:" VerticalAlignment="Center"/>
            <TextBlock Text="{Binding Timeline.LastTriggerTime}" VerticalAlignment="Center"/>
        </StackPanel>

        <controls:RealtimeTimelineControl Grid.Row="2"
                                          Tracks="{Binding Timeline.Tracks}"
                                          CurrentTime="{Binding Timeline.ViewportEnd}"
                                          VisibleDuration="{Binding Timeline.VisibleDuration}"
                                          Timeline="{Binding Timeline}"
                                          Margin="12"
                                          Background="#FF1E1E1E"/>
    </Grid>

</Window>
